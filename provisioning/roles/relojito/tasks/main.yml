---
  - name: relojito | Creating default group
    group:
      name={{relojito_default_group}}
      state=present

  - name: relojito | Creating default user
    user:
      name={{relojito_default_user}}
      groups={{relojito_default_group}}
      state=present
      createhome=no

  - name: relojito | Copying env vars
    template:
      src=relojito_vars.sh.j2
      dest=/etc/profile.d/relojito_vars.sh
      backup=no

  - name: relojito | Adding remote user to default group
    user:
      name={{remote_user}}
      groups={{relojito_default_group}}
      append=yes

  - name: relojito | Adding nginx user to default group
    user:
      name=www-data
      groups={{relojito_default_group}}
      append=yes

  - name: relojito | Adding additional dirs
    file:
      path={{item}}
      state=directory
      mode=770
      owner={{relojito_default_user}}
      group={{relojito_default_group}}
    with_items:
      - "{{relojito_virtualenv_dir}}"
      - "{{relojito_log_dir}}"
      - "{{relojito_log_dir}}/celery"
      - "{{relojito_log_dir}}/django"
      - "{{relojito_log_dir}}/supervisor"
      - "{{relojito_log_dir}}/uwsgi"

  - name: relojito | Creating main directory
    file:
      path={{relojito_main_dir}}
      state=directory
      mode=770
      owner={{remote_user}}
      group={{relojito_default_group}}
    when: remote_vm

  - name: relojito | Main directory rsync
    synchronize:
        dest=/opt
        src={{relojito_main_dir}}
        copy_links=yes
        recursive=yes
        delete=yes
        rsync_opts=--no-motd,--include-from=roles/relojito/files/rsync_filter
    become: no
    when: remote_vm
    tags:
        - deploy
        - rsync

  - name: sigel | Deleting pyc files
    shell: "find . -name '*.pyc' -delete"
    args:
      chdir: "{{relojito_main_dir}}"
    tags:
      - deploy

  - name: relojito | Creating Django log file
    file:
      path={{relojito_log_file}}
      state=touch
      owner={{relojito_default_user}}
      group={{relojito_default_group}}
      mode=664

  - name: relojito | Adding venv symlink to home
    file:
      dest=/home/{{remote_user}}/Envs/{{relojito_virtualenv_name}}
      src={{relojito_virtualenv_dir}}
      state=link

  - name: relojito | Installing apt packages
    apt:
      name={{item}}
      state=present
    with_items:
      - libjpeg-dev
      - gettext

  - name: relojito | Creating virtualenv with Python 3
    command: virtualenv --python=/usr/bin/python3 {{relojito_virtualenv_dir}}

  - name: relojito | Installing base requirements
    pip:
      requirements={{relojito_requirements}}
      virtualenv={{relojito_virtualenv_dir}}
    tags:
      - requirements

  - name: relojito | Installing development requirements
    pip:
      requirements={{relojito_requirements_dev}}
      virtualenv={{relojito_virtualenv_dir}}
    when: relojito_environment == 'development'
    tags:
      - requirements

  - name: relojito | Using uwsgi binary from virtualenv
    template:
      src=uwsgi_upstart.conf.j2
      dest=/etc/init/{{uwsgi_service_name}}.conf
      owner=root
      mode=644
      backup=yes
    tags:
      - deploy

  - name: relojito | Copying celery configuration template
    template:
      src=celery_config.py.j2
      dest={{relojito_main_dir}}/relojito/relojito/celery.py
      backup=no
    tags:
      - deploy

  - name: relojito | Copying development configuration template
    template:
      src=settings_development.j2
      dest={{relojito_main_dir}}/relojito/relojito/settings/development.py
      backup=no
    when: relojito_environment == 'development'
    tags:
      - deploy

  - name: relojito | Copying staging configuration template
    template:
      src=settings_staging.j2
      dest={{relojito_main_dir}}/relojito/relojito/settings/staging.py
      backup=no
    when: relojito_environment == 'staging'
    tags:
      - deploy

  - name: relojito | Copying production configuration template
    template:
      src=settings_production.j2
      dest={{relojito_main_dir}}/relojito/relojito/settings/production.py
      backup=no
    when: relojito_environment == 'production'
    tags:
      - deploy

  - name: relojito | Restarting PostgreSQL to kill connections
    service:
      name=postgresql
      state=restarted
    when: recreate_db == 'yes' and relojito_environment == 'development'

  - name: relojito | Removing existing DB
    shell:
      dropdb {{relojito_dbname}}
    become: yes
    become_user: postgres
    when: recreate_db == 'yes' and relojito_environment == 'development'

  - name: relojito | Creating DB
    shell: createdb {{relojito_dbname}}
    become: yes
    become_user: postgres
    when: recreate_db == 'yes' and relojito_environment == 'development'

  - name: relojito | Copying uwsgi configuration
    template:
      src=relojito_uwsgi.ini.j2
      dest=/etc/uwsgi/apps_available/relojito_uwsgi.ini
      backup=yes

  - name: relojito | Activating app in uWSGI emperor
    file:
      src=/etc/uwsgi/apps_available/relojito_uwsgi.ini
      dest=/etc/uwsgi/apps_enabled/relojito_uwsgi.ini
      state=link

  - name: relojito | Copying configuration for supervisor
    template:
      src=supervisord_relojito.conf.j2
      dest=/etc/supervisor/conf.d/relojito_operaciones.conf
    tags:
      - deploy

  - name: relojito | Restarting uWSGI
    service:
      name=uwsgi
      state=restarted
    tags:
      - restart

  - name: relojito | Copying configuration for nginx
    template:
      src=relojito_nginx.j2
      dest=/etc/nginx/sites-available/relojito_nginx
      backup=yes
    tags:
      - deploy

  - name: relojito | Collecting statics
    django_manage:
      command=collectstatic
      virtualenv={{relojito_virtualenv_dir}}
      settings=relojito.settings.{{relojito_environment}}
      app_path={{relojito_main_dir}}/relojito
    tags:
      - deploy

  - name: relojito | Disabling default site in nginx
    file:
      path=/etc/nginx/sites-enabled/default
      state=absent

  - name: relojito | Activating site in nginx
    file:
      src=/etc/nginx/sites-available/relojito_nginx
      dest=/etc/nginx/sites-enabled/relojito_nginx
      state=link
    notify:
      - restart nginx

  - name: relojito | Restarting nginx
    service:
      name=nginx
      state=restarted
    tags:
      - restart

  - name: relojito | Restart supervisord
    service:
      name=supervisord
      state=restarted
    tags:
      - restart
